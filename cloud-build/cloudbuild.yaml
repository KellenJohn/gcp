steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 
      '$_PROJECT_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE:$_TAG', 
      '.'
    ]

# 引入模块
- include: 'steps/trivy_scan.yaml'


  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      '$_PROJECT_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE:$_TAG'
    ]

- include: 'steps/deploy_cloud_run.yaml'

images:
  - $_PROJECT_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE:$_TAG

# 專案資訊
substitutions:
  # _PROJECT_ID: esun-cncf
  _PROJECT_REGION: us-central1
  _REPOSITORY: my-app-repo       # service name
  _IMAGE: my-serverless-app
  _TAG: v0.0.3

options:
  # machineType: N1_HIGHCPU_8  # 设置机器类型
  substitution_option: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY